name: Build, Push, and Deploy

on:
  push:
    branches: [master]

env:
  AWS_REGION: us-east-2
  BASE_ECR_URL_BACKEND: 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend
  BASE_ECR_URL_FRONTEND: 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-frontend
  APP_ID: 715841365404

jobs:
  application:
    name: DocuShare Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  deploy-to-public-ec2:
    name: Deploy to EC2 (Public)
    runs-on: ubuntu-latest
    needs: application
    steps:
      - name: SSH and deploy both containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 3.139.93.219
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Check and install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
              newgrp docker
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi

            if ! command -v nginx &> /dev/null; then
              echo "Installing NGINX..."
              sudo amazon-linux-extras enable nginx1
              sudo yum clean metadata
              sudo yum install -y nginx
              sudo systemctl start nginx
              sudo systemctl enable nginx
            fi

            # Pull the Docker images from ECR
            FRONTEND_IMAGE=${{ env.BASE_ECR_URL_FRONTEND }}:latest

            echo "Logging into ECR..."
            aws ecr get-login-password --region us-east-2 | sudo docker login --username AWS --password-stdin ${{ env.BASE_ECR_URL_FRONTEND }}

            echo "Pulling frontend and backend Docker images..."
            sudo docker pull $FRONTEND_IMAGE

            echo "Stopping old containers..."
            sudo docker stop docushare-frontend || true && sudo docker rm docushare-frontend || true

            # Start the new containers
            echo "Starting Frontend container..."
            sudo docker run -d --name docushare-frontend -p 3000:3000 "$FRONTEND_IMAGE"

            echo "Configuring NGINX to proxy on port 3001..."
            sudo tee /etc/nginx/conf.d/docushare-backend.conf > /dev/null <<EOF
            server {
              # Frontend: Listen on port 80 for the frontend
              listen 80;

              location / {
                  # Serve frontend from the frontend container
                  proxy_pass http://localhost:3000/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }

              # Backend: All /api requests should go to the backend container on port 3001
              location /api/ {
                  proxy_pass http://10.0.3.228:3001/api/;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }
            EOF
            echo "Restarting NGINX..."
            sudo nginx -t && sudo systemctl restart nginx
  deploy-to-private-ec2-backend:
    name: Deploy Backend to Private EC2
    runs-on: ubuntu-latest
    needs: application
    steps:
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Backend to Private EC2
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "i-072790db1a181bb49" \
            --comment "Deploy backend container" \
            --parameters 'commands=[
              "if ! command -v docker &> /dev/null; then",
              "  echo Docker not found. Installing Docker...",
              "  sudo yum update -y",
              "  sudo yum install -y docker",
              "  sudo systemctl start docker",
              "  sudo systemctl enable docker",
              "  sudo usermod -aG docker ec2-user",
              "  echo Docker installed successfully.",
              "else",
              "  echo Docker is already installed.",
              "fi",
              "aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 715841365404.dkr.ecr.us-east-2.amazonaws.com",
              "sudo docker pull 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend:latest",
              "sudo docker stop docushare-backend || true && docker rm docushare-backend || true",
              "sudo docker run -d --name docushare-backend -p 3001:3001 715841365404.dkr.ecr.us-east-2.amazonaws.com/docushare-backend:latest"
            ]' \
            --region us-east-2
