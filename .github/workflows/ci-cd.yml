name: Build, Push, and Deploy Document Converter

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  BASE_ECR_URL_BACKEND: 536697231430.dkr.ecr.us-east-1.amazonaws.com/doc-converter-backend
  BASE_ECR_URL_FRONTEND: 536697231430.dkr.ecr.us-east-1.amazonaws.com/doc-converter-frontend
  APP_ID: 536697231430
  PUBLIC_EC2_HOST: 18.212.248.127

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64
          tags: ${{ env.BASE_ECR_URL_FRONTEND }}:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          platforms: linux/amd64
          tags: ${{ env.BASE_ECR_URL_BACKEND }}:latest

  deploy-to-public-ec2:
    name: Deploy to EC2 (Public)
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH and deploy frontend container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.PUBLIC_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Check and install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
              newgrp docker
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi

            # Pull the Docker images from ECR
            FRONTEND_IMAGE=${{ env.BASE_ECR_URL_FRONTEND }}:latest

            echo "Logging into ECR..."
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ env.BASE_ECR_URL_FRONTEND }}

            echo "Pulling frontend Docker image..."
            sudo docker pull $FRONTEND_IMAGE

            echo "Stopping old container..."
            sudo docker stop doc-converter-frontend || true && sudo docker rm doc-converter-frontend || true

            # Start the new container
            echo "Starting Frontend container..."
            sudo docker run -d --name doc-converter-frontend -p 5173:5173 "$FRONTEND_IMAGE"

  deploy-to-private-ec2-backend:
    name: Deploy Backend to Private EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH and deploy backend container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.PUBLIC_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Check and install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
              newgrp docker
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi

            # Pull the Docker images from ECR
            BACKEND_IMAGE=${{ env.BASE_ECR_URL_BACKEND }}:latest

            echo "Logging into ECR..."
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ env.BASE_ECR_URL_BACKEND }}

            echo "Pulling backend Docker image..."
            sudo docker pull $BACKEND_IMAGE

            echo "Stopping old container..."
            sudo docker stop doc-converter-backend || true && sudo docker rm doc-converter-backend || true

            # Start the new container
            echo "Starting Frontend container..."
            sudo docker run -d --name doc-converter-backend -p 3001:3001 "$BACKEND_IMAGE"